idea {
    module {
        inheritOutputDirs = true
    }
}

dependencies {
    compile project(":webapi-lib")

    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: project.jacksonVersion
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: project.jacksonVersion

    compile group: "org.eclipse.jetty", name: "jetty-server", version: project.jettyVersion
    compile group: "org.eclipse.jetty", name: "jetty-servlet", version: project.jettyVersion
    compile group: "org.eclipse.jetty", name: "jetty-rewrite", version: project.jettyVersion
    compile group: "org.eclipse.jetty.websocket", name: "websocket-server", version: project.jettyVersion
    compile group: "org.eclipse.jetty.websocket", name: "websocket-servlet", version: project.jettyVersion
    compile group: "org.eclipse.jetty.websocket", name: "websocket-client", version: project.jettyVersion

    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '5.3.0'

    compile group: 'org.spongepowered', name: 'configurate-hocon', version: '3.5'
    compile group: 'org.spongepowered', name: 'configurate-gson', version: '3.5'
    compile group: 'org.spongepowered', name: 'configurate-yaml', version: '3.5'
    compile group: 'org.spongepowered', name: 'configurate-xml', version: '3.5'

    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'valandur.webapi.Main'
        )
    }
}

shadowJar {
    configurations = [project.configurations.compile]

    mergeServiceFiles()

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude "/about.html"
    exclude "/jetty-dir.css"
    exclude "/org/eclipse/jetty/favicon.ico"

    archiveName = "webapi-server-${version}.jar"
}

task copyJars(type: Copy) {
    from([shadowJar])
    into project.file("${rootDir}/artifacts")
}
copyJars.dependsOn(shadowJar)

build.dependsOn(copyJars)
